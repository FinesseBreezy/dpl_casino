require_relative 'player'
require_relative 'Slots1'
require_relative 'blackjack'
require_relative 'high_low'
require_relative 'odd_even'


class Game

  attr_accessor :player_wallet

  def initialize
    Game.move
  end

  @values = Array[
    ["▓","▓","D","D","▓","▓","▓","P","P","P","▓","▓","L","▓","▓","▓","▓","▓","▓","▓","C","C","▓","▓","▓","A","A","▓","▓","▓","S","S","S","▓","I","I","I","I","I","▓","N","▓","▓","▓","▓","N","▓","O","O","O","O","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","▓","D","▓","D","▓","▓","P","▓","▓","P","▓","L","▓","▓","▓","▓","▓","▓","C","▓","▓","C","▓","A","▓","▓","A","▓","S","▓","▓","▓","▓","▓","▓","I","▓","▓","▓","N","N","▓","▓","▓","N","▓","O","▓","▓","O","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","▓","D","▓","▓","D","▓","P","▓","▓","P","▓","L","▓","▓","▓","▓","▓","▓","C","▓","▓","▓","▓","A","▓","▓","A","▓","S","▓","▓","▓","▓","▓","▓","I","▓","▓","▓","N","▓","N","▓","▓","N","▓","O","▓","▓","O","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","▓","D","▓","▓","D","▓","P","▓","▓","P","▓","L","▓","▓","=","=","=","▓","C","▓","▓","▓","▓","A","A","A","A","▓","▓","S","▓","▓","▓","▓","▓","I","▓","▓","▓","N","▓","N","▓","▓","N","▓","O","▓","▓","O","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","▓","D","▓","▓","D","▓","P","▓","▓","P","▓","L","▓","▓","▓","▓","▓","▓","C","▓","▓","▓","▓","A","▓","▓","A","▓","▓","▓","S","▓","▓","I","I","I","I","I","▓","N","▓","▓","N","▓","N","▓","O","▓","▓","O","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","▓","D","▓","▓","D","▓","P","P","P","▓","▓","L","▓","▓","▓","▓","▓","▓","C","▓","▓","▓","▓","A","▓","▓","A","▓","▓","▓","▓","S","▓","▓","▓","▓","▓","▓","▓","N","▓","▓","▓","N","N","▓","O","▓","▓","O","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","▓","D","▓","D","▓","▓","P","▓","▓","▓","▓","L","▓","▓","▓","▓","▓","▓","C","▓","▓","C","▓","A","▓","▓","A","▓","▓","▓","▓","S","▓","▓","O","D","D","▓","▓","N","▓","▓","▓","N","N","▓","O","▓","▓","O","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","▓","D","D","▓","▓","▓","P","▓","▓","▓","▓","L","L","L","▓","▓","▓","▓","▓","C","C","▓","▓","A","▓","▓","A","▓","S","S","S","▓","▓","▓","▓","▓","O","R","▓","N","▓","▓","▓","▓","N","▓","O","O","O","O","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","E","V","E","N","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","S","L","O","T","S","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","╔","═","═","═","═","═","═","═","═","═","╗","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","╔","╦","╦","╦","╦","╦","╗","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","║"," "," "," "," "," "," "," "," "," ","║","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","║","♥","║","♥","║","♥","║","/","▓","▓","▓","▓","▓","░","░","░","░","░","░","░","░","░","░","░","░","░","░","░","░","░","░","║"," "," "," ","B","&","J"," "," "," ","║","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","╚","╧","╩","╧","╩","╧","╝","▓","▓","▓","▓","▓","▓","░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","╚","═","═","═","═","═","═","═","═","═","╝","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","░","░","░","░","░","░","▓","▓","▓","▓","▓","▓","▓","░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","▓","▓","▓","▓","▓","░","▓","▓","▓","▓","▓","▓","▓","░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","▓","▓","▓","▓","▓","░","▓","▓","▓","▓","▓","▓","▓","░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","▓","▓","▓","▓","▓","░","▓","▓","▓","▓","▓","▓","▓","░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["░","░","░","░","░","░","░","░","░","░","░","░","░","░","░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["░","B","L","A","C","K","▄","▓","▓","▓","▓","▓","▓","▓","░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","H","I","G","H","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["░","J","A","C","K","▐","☺","▐","▓","▓","▓","▓","▓","▓","░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","L","O","W","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["░","╓","╔","═","═","═","═","═","═","═","═","═","╗","╖","░","░","░","░","░","░","░","░","░","░","░","░","░","░","░","░","░","░","╔","═","═","═","═","═","═","═","═","═","╗","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["░","╓","║"," "," "," "," "," "," "," "," "," ","║","╖","░","░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","║"," "," "," "," "," "," "," "," "," ","║","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["░","╓","║"," "," "," ","B","&","J"," "," "," ","║","╖","░","░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","║"," "," "," ","H","&","L"," "," "," ","║","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["░","╓","╚","═","═","═","═","═","═","═","═","═","╝","╖","░","░","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","╚","═","═","═","═","═","═","═","═","═","╝","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
    ["▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓","▓",],
  ]
  @player = Player.new

  def self.draw(a,b)
    push_frame = @values.length
    puts @x,@y
    a = a
    b = b
    @values[a][b] = "╬"
    # Loop over each row Array.
    @values.each do |y|

      # Loop over each cell in the row.
      y.each do |cell|
        if cell == 'D'
          r = Random.new.rand(1..2)

            if r == 1
            print cell.colorize(:cyan)
          elsif r == 2
            print cell.colorize(:magenta)
          end

        elsif cell == 'P'
          r = Random.new.rand(1..2)

            if r == 1
            print cell.colorize(:cyan)
          elsif r == 2
            print cell.colorize(:magenta)
          end

        elsif cell == 'L'
          r = Random.new.rand(1..2)

            if r == 1
            print cell.colorize(:cyan)
          elsif r == 2
            print cell.colorize(:magenta)
          end

        elsif cell == '=='
          r = Random.new.rand(1..2)

            if r == 1
            print cell.colorize(:cyan)
          elsif r == 2
            print cell.colorize(:magenta)
          end

        elsif cell == 'C'
          r = Random.new.rand(1..2)

            if r == 1
            print cell.colorize(:cyan)
          elsif r == 2
            print cell.colorize(:magenta)
          end

        elsif cell == 'A'
          r = Random.new.rand(1..2)

            if r == 1
            print cell.colorize(:cyan)
          elsif r == 2
            print cell.colorize(:magenta)
          end

        elsif cell == 'S'
          r = Random.new.rand(1..2)

            if r == 1
            print cell.colorize(:cyan)
          elsif r == 2
            print cell.colorize(:magenta)
          end

        elsif cell == 'I'
          r = Random.new.rand(1..2)

            if r == 1
            print cell.colorize(:cyan)
          elsif r == 2
            print cell.colorize(:magenta)
          end

        elsif cell == 'N'
          r = Random.new.rand(1..2)

            if r == 1
            print cell.colorize(:cyan)
          elsif r == 2
            print cell.colorize(:magenta)
          end

        elsif cell == 'O'
          r = Random.new.rand(1..2)

            if r == 1
            print cell.colorize(:cyan)
          elsif r == 2
            print cell.colorize(:magenta)
          end

        else
          print cell
        end
      end


      # End of row.
      puts ""
    end
  end

  require 'io/console'

  # Reads kexpresses from the user including 2 and 3 escape character sequences.
  def self.read_char
    STDIN.echo = false
    STDIN.raw!

    input = STDIN.getc.chr
    if input == "\e" then
      input << STDIN.read_nonblock(3) rescue nil
      input << STDIN.read_nonblock(2) rescue nil
    end
  ensure
    STDIN.echo = true
    STDIN.cooked!

    return input
  end
  @y = 10
  @x = 10
  def self.move()
    if @x.between?(0, 8) && @y.between?(9, 12)
      slots = Slots.new(@player)
      slots.menu_options(slots.display_menu)
    end
    if @x.between?(0, 15) && @y.between?(22, 27)
      blackjack = Blackjack.new(@player)
    end
    if @x.between?(32, 41) && @y.between?(22, 26)
      highlow = Highlow.new(@player)
      highlow.highlow_greeting
    end
    if @x.between?(32, 42) && @y.between?(9, 12)
        oddOrEven = Odds_evens.new(@player)
        oddOrEven.guess
    end

    c = Game.read_char
    puts c
    case c
      #up
    when "\e[A"
      if @y <= 0
        @y += 1
      end
      @y -= 1
      if @values[@y][@x] == "░"
        @values[@y + 1][@x] = "░"
      else
        @values[@y + 1][@x] = "▓"
      end
      #down
    when "\e[B"
      if @y >= @values.length - 1
        @y -= 1
      end
      @y += 1
      #CARPET CHECK
      if @values[@y][@x] == "░"
        @values[@y - 1][@x] = "░"
      else
        @values[@y - 1][@x] = "▓"
      end
      #right
    when "\e[C"
      if @x >= @values[0].length - 1
        @x -= 1
      end
      @x += 1
      #CARPET CHECK
      if @values[@y][@x] == "░"
        @values[@y][@x - 1] = "░"
      else
        @values[@y][@x - 1] = "▓"
      end
      #left
    when "\e[D"
      if @x <= 0
        @x += 1
      end
      @x -= 1
      if @values[@y][@x] == "░"
        @values[@y][@x + 1] = "░"
      else
        @values[@y][@x + 1] = "▓"
      end
    when "\u0003"
      puts "CONTROL-C"
      exit 0
    end
    system ("cls")
    puts `clear && printf '\e[3J'`

    Game.draw(@y,@x)

  end
  while true
    Game.move
  end
end
game = Game.new()
